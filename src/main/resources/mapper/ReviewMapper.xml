<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.foodmap.mapper.ReviewMapper">

    <select id="getReviewsByRestaurant" resultType="com.foodmap.entity.dto.ReviewDTO">
        SELECT
            r.id, r.content, r.rating, r.user_id AS userId,
            u.username, u.avatar_url AS userAvatar,
            r.restaurant_id AS restaurantId, res.name AS restaurantName,
            r.like_count AS likeCount, r.created_at AS createdAt, r.updated_at AS updatedAt,
            r.status,
            CASE WHEN l.id IS NOT NULL THEN true ELSE false END AS userLiked
        FROM
            reviews r
                LEFT JOIN users u ON r.user_id = u.id
                LEFT JOIN restaurants res ON r.restaurant_id = res.id
                LEFT JOIN likes l ON r.id = l.review_id AND l.user_id = #{userId}
        WHERE
            r.restaurant_id = #{restaurantId}
          AND r.status = 'ACTIVE'
        ORDER BY
            r.created_at DESC
    </select>

    <select id="getReviewsByUser" resultType="com.foodmap.entity.dto.ReviewDTO">
        SELECT
            r.id, r.content, r.rating, r.user_id AS userId,
            u.username, u.avatar_url AS userAvatar,
            r.restaurant_id AS restaurantId, res.name AS restaurantName,
            r.like_count AS likeCount, r.created_at AS createdAt, r.updated_at AS updatedAt,
            r.status,
            CASE WHEN l.id IS NOT NULL THEN true ELSE false END AS userLiked
        FROM
            reviews r
                LEFT JOIN users u ON r.user_id = u.id
                LEFT JOIN restaurants res ON r.restaurant_id = res.id
                LEFT JOIN likes l ON r.id = l.review_id AND l.user_id = #{currentUserId}
        WHERE
            r.user_id = #{userId}
          AND r.status = 'ACTIVE'
        ORDER BY
            r.created_at DESC
    </select>

    <select id="getReviewById" resultType="com.foodmap.entity.dto.ReviewDTO">
        SELECT
            r.id, r.content, r.rating, r.user_id AS userId,
            u.username, u.avatar_url AS userAvatar,
            r.restaurant_id AS restaurantId, res.name AS restaurantName,
            r.like_count AS likeCount, r.created_at AS createdAt, r.updated_at AS updatedAt,
            r.status,
            CASE WHEN l.id IS NOT NULL THEN true ELSE false END AS userLiked
        FROM
            reviews r
                LEFT JOIN users u ON r.user_id = u.id
                LEFT JOIN restaurants res ON r.restaurant_id = res.id
                LEFT JOIN likes l ON r.id = l.review_id AND l.user_id = #{userId}
        WHERE
            r.id = #{reviewId}
          AND r.status = 'ACTIVE'
    </select>
</mapper>